// Code generated by goa v3.18.2, DO NOT EDIT.
//
// game client
//
// Command:
// $ goa gen github.com/Adambombtastic/grandgame/design

package game

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "game" service client.
type Client struct {
	ListParticipantsEndpoint          goa.Endpoint
	ListAdvantagesEndpoint            goa.Endpoint
	ListCompetitionEventKindsEndpoint goa.Endpoint
}

// NewClient initializes a "game" service client given the endpoints.
func NewClient(listParticipants, listAdvantages, listCompetitionEventKinds goa.Endpoint) *Client {
	return &Client{
		ListParticipantsEndpoint:          listParticipants,
		ListAdvantagesEndpoint:            listAdvantages,
		ListCompetitionEventKindsEndpoint: listCompetitionEventKinds,
	}
}

// ListParticipants calls the "list_participants" endpoint of the "game"
// service.
// ListParticipants may return the following errors:
//   - "not_found" (type *goa.ServiceError)
//   - "internal_error" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) ListParticipants(ctx context.Context) (res []*Participant, err error) {
	var ires any
	ires, err = c.ListParticipantsEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*Participant), nil
}

// ListAdvantages calls the "list_advantages" endpoint of the "game" service.
// ListAdvantages may return the following errors:
//   - "not_found" (type *goa.ServiceError)
//   - "internal_error" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) ListAdvantages(ctx context.Context) (res []*Advantage, err error) {
	var ires any
	ires, err = c.ListAdvantagesEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*Advantage), nil
}

// ListCompetitionEventKinds calls the "list_competition_event_kinds" endpoint
// of the "game" service.
// ListCompetitionEventKinds may return the following errors:
//   - "not_found" (type *goa.ServiceError)
//   - "internal_error" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) ListCompetitionEventKinds(ctx context.Context) (res []*CompetitionEventDescription, err error) {
	var ires any
	ires, err = c.ListCompetitionEventKindsEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*CompetitionEventDescription), nil
}
