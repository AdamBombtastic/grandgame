// Code generated by goa v3.18.2, DO NOT EDIT.
//
// game client HTTP transport
//
// Command:
// $ goa gen github.com/Adambombtastic/grandgame/design

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the game service endpoint HTTP clients.
type Client struct {
	// ListParticipants Doer is the HTTP client used to make requests to the
	// list_participants endpoint.
	ListParticipantsDoer goahttp.Doer

	// ListAdvantages Doer is the HTTP client used to make requests to the
	// list_advantages endpoint.
	ListAdvantagesDoer goahttp.Doer

	// ListCompetitionEventKinds Doer is the HTTP client used to make requests to
	// the list_competition_event_kinds endpoint.
	ListCompetitionEventKindsDoer goahttp.Doer

	// CORS Doer is the HTTP client used to make requests to the  endpoint.
	CORSDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the game service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		ListParticipantsDoer:          doer,
		ListAdvantagesDoer:            doer,
		ListCompetitionEventKindsDoer: doer,
		CORSDoer:                      doer,
		RestoreResponseBody:           restoreBody,
		scheme:                        scheme,
		host:                          host,
		decoder:                       dec,
		encoder:                       enc,
	}
}

// ListParticipants returns an endpoint that makes HTTP requests to the game
// service list_participants server.
func (c *Client) ListParticipants() goa.Endpoint {
	var (
		decodeResponse = DecodeListParticipantsResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildListParticipantsRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.ListParticipantsDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("game", "list_participants", err)
		}
		return decodeResponse(resp)
	}
}

// ListAdvantages returns an endpoint that makes HTTP requests to the game
// service list_advantages server.
func (c *Client) ListAdvantages() goa.Endpoint {
	var (
		decodeResponse = DecodeListAdvantagesResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildListAdvantagesRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.ListAdvantagesDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("game", "list_advantages", err)
		}
		return decodeResponse(resp)
	}
}

// ListCompetitionEventKinds returns an endpoint that makes HTTP requests to
// the game service list_competition_event_kinds server.
func (c *Client) ListCompetitionEventKinds() goa.Endpoint {
	var (
		decodeResponse = DecodeListCompetitionEventKindsResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildListCompetitionEventKindsRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.ListCompetitionEventKindsDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("game", "list_competition_event_kinds", err)
		}
		return decodeResponse(resp)
	}
}
